components:
  schemas:
    Body_process_event__service___topic__post:
      properties:
        dlq_id:
          description: The DLQ ID of the event to process.
          format: uuid
          title: Dlq Id
          type: string
        override:
          anyOf:
          - $ref: '#/components/schemas/EventCore'
          - type: 'null'
      required:
      - dlq_id
      title: Body_process_event__service___topic__post
      type: object
    DLQInfo:
      description: Extra DLQ-specific information for a DLQ event
      properties:
        exc_class:
          default: ''
          description: The exception class that was raised.
          title: Exc Class
          type: string
        exc_msg:
          default: ''
          description: The exception message that was raised.
          title: Exc Msg
          type: string
        offset:
          description: The offset of the event.
          title: Offset
          type: integer
        partition:
          description: The partition of the event.
          title: Partition
          type: integer
        service:
          description: The name of the service that failed to process the event.
          title: Service
          type: string
      required:
      - service
      - partition
      - offset
      title: DLQInfo
      type: object
    EventCore:
      description: Model representing the core GHGA-internal event info
      properties:
        key:
          description: The key of the event.
          title: Key
          type: string
        payload:
          additionalProperties: true
          description: The payload for the event.
          title: Payload
          type: object
        topic:
          description: The name of the original topic the event was located in.
          title: Topic
          type: string
        type_:
          description: The 'type' given to the original event.
          title: Type
          type: string
      required:
      - topic
      - type_
      - payload
      - key
      title: EventCore
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HttpEmptyDLQError:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/HttpEmptyDLQErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          const: emptyDLQError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpEmptyDLQError
      type: object
    HttpEmptyDLQErrorData:
      additionalProperties: true
      properties: {}
      title: HttpEmptyDLQErrorData
      type: object
    HttpInternalServerError:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/HttpInternalServerErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          const: internalServerError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpInternalServerError
      type: object
    HttpInternalServerErrorData:
      additionalProperties: true
      properties: {}
      title: HttpInternalServerErrorData
      type: object
    HttpOverrideValidationError:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/HttpOverrideValidationErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          const: overrideValidationError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpOverrideValidationError
      type: object
    HttpOverrideValidationErrorData:
      additionalProperties: true
      properties: {}
      title: HttpOverrideValidationErrorData
      type: object
    HttpPreviewParamsError:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/HttpPreviewParamsErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          const: previewParamsError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpPreviewParamsError
      type: object
    HttpPreviewParamsErrorData:
      additionalProperties: true
      properties: {}
      title: HttpPreviewParamsErrorData
      type: object
    HttpSequenceError:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/HttpSequenceErrorData'
        description:
          description: A human readable message to the client explaining the cause
            of the exception.
          title: Description
          type: string
        exception_id:
          const: dlqSequenceError
          title: Exception Id
          type: string
      required:
      - data
      - description
      - exception_id
      title: HttpSequenceError
      type: object
    HttpSequenceErrorData:
      additionalProperties: true
      properties: {}
      title: HttpSequenceErrorData
      type: object
    PublishableEventData:
      description: Only the data needed to publish an event -- core data and headers
      properties:
        headers:
          additionalProperties:
            type: string
          description: Any headers for the event. Must at least include correlation
            ID.
          title: Headers
          type: object
        key:
          description: The key of the event.
          title: Key
          type: string
        payload:
          additionalProperties: true
          description: The payload for the event.
          title: Payload
          type: object
        topic:
          description: The name of the original topic the event was located in.
          title: Topic
          type: string
        type_:
          description: The 'type' given to the original event.
          title: Type
          type: string
      required:
      - headers
      - topic
      - type_
      - payload
      - key
      title: PublishableEventData
      type: object
    StoredDLQEvent:
      description: Model representing a DLQ event as it exists in the database
      properties:
        dlq_id:
          description: The unique DLQS identifier for a DLQ event
          format: uuid4
          title: Dlq Id
          type: string
        dlq_info:
          $ref: '#/components/schemas/DLQInfo'
          description: The DLQ information for the DLQ event
        headers:
          additionalProperties:
            type: string
          description: Any headers for the event. Must at least include correlation
            ID.
          title: Headers
          type: object
        key:
          description: The key of the event.
          title: Key
          type: string
        payload:
          additionalProperties: true
          description: The payload for the event.
          title: Payload
          type: object
        timestamp:
          description: The timestamp of the event.
          format: date-time
          title: Timestamp
          type: string
        topic:
          description: The name of the original topic the event was located in.
          title: Topic
          type: string
        type_:
          description: The 'type' given to the original event.
          title: Type
          type: string
      required:
      - headers
      - topic
      - type_
      - payload
      - key
      - dlq_id
      - dlq_info
      title: StoredDLQEvent
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
info:
  description: A service to manage the dead letter queue for Kafka events
  title: DLQ Service
  version: 3.0.0
openapi: 3.1.0
paths:
  /health:
    get:
      description: Used to test if this service is alive
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: health
  /{dlq_id}:
    delete:
      description: Discard the event with the given DLQ ID, if it exists.
      operationId: discard_event__dlq_id__delete
      parameters:
      - in: path
        name: dlq_id
        required: true
        schema:
          format: uuid4
          title: Dlq Id
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpInternalServerError'
          description: Internal Server Error
      security:
      - HTTPBearer: []
      summary: Discard the event with the given DLQ ID, if it exists.
  /{service}/{topic}:
    get:
      description: 'Return the next events in the topic.


        This is a preview of the events and does not impact event ordering within
        the DLQ.'
      operationId: get_events__service___topic__get
      parameters:
      - in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
      - in: path
        name: topic
        required: true
        schema:
          title: Topic
          type: string
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StoredDLQEvent'
                title: Response Get Events  Service   Topic  Get
                type: array
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpPreviewParamsError'
          description: Bad Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpInternalServerError'
          description: Internal Server Error
      security:
      - HTTPBearer: []
      summary: Return the next events in the topic
    post:
      description: Returns the published event data or, if dry_run is True, the event
        that would have been published.
      operationId: process_event__service___topic__post
      parameters:
      - in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
      - in: path
        name: topic
        required: true
        schema:
          title: Topic
          type: string
      - in: query
        name: dry_run
        required: false
        schema:
          default: false
          title: Dry Run
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_process_event__service___topic__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishableEventData'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpOverrideValidationError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEmptyDLQError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpSequenceError'
          description: Conflict
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpInternalServerError'
          description: Internal Server Error
      security:
      - HTTPBearer: []
      summary: Process and publish the next event in the topic for the given service.
servers:
- url: ''
